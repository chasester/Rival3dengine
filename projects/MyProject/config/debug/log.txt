init: sdl
init: net
init: Angel
init: game
init: video
init: gl
Renderer: NVIDIA GeForce GTX 1080 Ti/PCIe/SSE2 (NVIDIA Corporation)
Driver: 4.0.0 NVIDIA 546.17
GLSL: 4.00 NVIDIA via Cg compiler
init: console
init: world
init: sound
init: cfg
init: render
GLSL ERROR (FS:null)
0(18) : error C0107: Too many arguments to macro fragdata
0(19) : error C1004: in and out only apply to formal parameters "main"
0(21) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: fragdata(0, fragcolor, vec4)
19:     void main(void)
20:     {
21:         fragcolor = vec4(1.0, 0.0, 1.0, 1.0);
22:     }
GLSL ERROR (FS:ldr)
0(21) : error C0107: Too many arguments to macro fragdata
0(22) : error C1004: in and out only apply to formal parameters "main"
0(26) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform sampler2D tex0;
19:     varying vec2 texcoord0;
20:     varying vec4 colorscale;
21:     fragdata(0, fragcolor, vec4)
22:     void main(void)
23:     {
24:         vec4 color = texture2D(tex0, texcoord0);
25:         #pragma CUBE2_swizzle color
26:         fragcolor = colorscale * color;
27:     }
GLSL ERROR (FS:ldrnotexture)
0(19) : error C0107: Too many arguments to macro fragdata
0(20) : error C1004: in and out only apply to formal parameters "main"
0(22) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: varying vec4 color;
19:     fragdata(0, fragcolor, vec4)
20:     void main(void)
21:     {
22:         fragcolor = color;
23:     }
GLSL ERROR (FS:fogged)
0(21) : error C0107: Too many arguments to macro fragdata
0(22) : error C1004: in and out only apply to formal parameters "main"
0(26) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform sampler2D tex0;
19:     varying vec2 texcoord0;
20:     varying vec4 colorscale;
21:     fragdata(0, fragcolor, vec4)
22:     void main(void)
23:     {
24:         vec4 color = texture2D(tex0, texcoord0);
25:         #pragma CUBE2_swizzle color
26:         fragcolor = colorscale * color;
27:     }
GLSL ERROR (FS:foggednotexture)
0(19) : error C0107: Too many arguments to macro fragdata
0(20) : error C1004: in and out only apply to formal parameters "main"
0(22) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: varying vec4 color;
19:     fragdata(0, fragcolor, vec4)
20:     void main(void)
21:     {
22:         fragcolor = color;
23:     }
GLSL ERROR (FS:fogoverlay)
0(19) : error C0107: Too many arguments to macro fragdata
0(20) : error C1004: in and out only apply to formal parameters "main"
0(22) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: varying vec4 color;
19:     fragdata(0, fragcolor, vec4)
20:     void main(void)
21:     {
22:         fragcolor = color;
23:     }
GLSL ERROR (FS:hud)
0(21) : error C0107: Too many arguments to macro fragdata
0(22) : error C1004: in and out only apply to formal parameters "main"
0(26) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform sampler2D tex0;
19:     varying vec2 texcoord0;
20:     varying vec4 colorscale;
21:     fragdata(0, fragcolor, vec4)
22:     void main(void)
23:     {
24:         vec4 color = texture2D(tex0, texcoord0);
25:         #pragma CUBE2_swizzle color
26:         fragcolor = colorscale * color;
27:     }
GLSL ERROR (FS:hudtext)
0(22) : error C0107: Too many arguments to macro fragdata
0(23) : error C1004: in and out only apply to formal parameters "main"
0(28) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform sampler2D tex0;
19:     uniform vec4 textparams;
20:     varying vec2 texcoord0;
21:     varying vec4 colorscale;
22:     fragdata(0, fragcolor, vec4)
23:     void main(void)
24:     {
25:         float dist = texture2D(tex0, texcoord0).r;
26:         float border = smoothstep(textparams.x, textparams.y, dist);
27:         float outline = smoothstep(textparams.z, textparams.w, dist);
28:         fragcolor = vec4(colorscale.rgb * outline, colorscale.a * border);
29:     }
GLSL ERROR (FS:hudrgb)
0(21) : error C0107: Too many arguments to macro fragdata
0(22) : error C1004: in and out only apply to formal parameters "main"
0(26) : error C1503: undefined variable "fragcolor"
0(27) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform sampler2D tex0;
19:     varying vec2 texcoord0;
20:     varying vec4 colorscale;
21:     fragdata(0, fragcolor, vec4)
22:     void main(void)
23:     {
24:         vec4 color = texture2D(tex0, texcoord0);
25:         #pragma CUBE2_swizzle color
26:         fragcolor.rgb = colorscale.rgb * color.rgb;
27:         fragcolor.a   = colorscale.a;
28:     }
GLSL ERROR (FS:hudnotexture)
0(19) : error C0107: Too many arguments to macro fragdata
0(20) : error C1004: in and out only apply to formal parameters "main"
0(22) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: varying vec4 color;
19:     fragdata(0, fragcolor, vec4)
20:     void main(void)
21:     {
22:         fragcolor = color;
23:     }
GLSL ERROR (FS:hudrect)
0(21) : error C0107: Too many arguments to macro fragdata
0(22) : error C1004: in and out only apply to formal parameters "main"
0(24) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform sampler2DRect tex0;
19:     varying vec2 texcoord0;
20:     varying vec4 colorscale;
21:     fragdata(0, fragcolor, vec4)
22:     void main(void)
23:     {
24:         fragcolor = colorscale * texture2DRect(tex0, texcoord0);
25:     }
GLSL ERROR (FS:hud3d)
0(21) : error C0107: Too many arguments to macro fragdata
0(22) : error C1004: in and out only apply to formal parameters "main"
0(24) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform sampler3D tex0;
19:     varying vec3 texcoord0;
20:     varying vec4 color;
21:     fragdata(0, fragcolor, vec4)
22:     void main(void)
23:     {
24:         fragcolor = color * texture3D(tex0, texcoord0);
25:     }
GLSL ERROR (FS:hudcubemap)
0(21) : error C0107: Too many arguments to macro fragdata
0(22) : error C1004: in and out only apply to formal parameters "main"
0(24) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform samplerCube tex0;
19:     varying vec3 texcoord0;
20:     varying vec4 colorscale;
21:     fragdata(0, fragcolor, vec4)
22:     void main(void)
23:     {
24:         fragcolor = colorscale * textureCube(tex0, texcoord0);
25:     }
GLSL ERROR (FS:stdworld)
0(23) : error C0107: Too many arguments to macro fragdata
0(24) : error C0107: Too many arguments to macro fragdata
0(26) : error C0107: Too many arguments to macro fragdata
0(29) : error C7538: OpenGL does not allow 'uniform' after 'inout'
0(29) : error C7001: qualifier specified twice
0(29) : error C7001: qualifier specified twice
0(29) : error C7548: 'layout(location)' requires "#extension GL_ARB_explicit_uniform_location : enable" before use
0(29) : error C0000: ... or #version 430
0(29) : error C5060: out can't be used with non-varying lineardepthscale
0(52) : error C1503: undefined variable "gcolor"
0(67) : error C1503: undefined variable "gnormal"
0(75) : error C1503: undefined variable "gnormal"
0(84) : error C1503: undefined variable "gcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform vec4 colorparams;
19:         uniform sampler2D diffusemap;
20:         uniform float hashid;
21:         varying vec3 nvec;
22:         
23:         fragdata(0, gcolor, vec4)
24:         fragdata(1, gnormal, vec4)
25:         
26:             fragdata(2, gglow, vec4)
27:         
28:         
29:         uniform vec2 lineardepthscale;
30:         uniform vec3 gdepthpackparams;
31:         varying float lineardepth;
32:     
33:     
34:         
35:             varying vec2 texcoord0;
36:         
37:         
38:         
39:         
40:         
41: 
42: 
43: uniform vec4 gloss;
44:         void main(void)
45:         {
46:             vec3 normal = normalize(nvec);
47: 
48:             
49:                 vec4 diffuse = texture2D(diffusemap, texcoord0);   
50:             
51: 
52:             gcolor.rgb = diffuse.rgb*colorparams.rgb;
53: 
54:             
55: 
56:             
57: 
58:             
59: 
60:             
61:         #ifdef packnorm
62:             
63:         gnormal.rgb = normal * sqrt(0.25 + 0.5*(packnorm)) * 0.5 + 0.5;
64:     
65:         #else
66:             
67:         gnormal.rgb = normal  * 0.5 + 0.5;
68:     
69:         #endif
70:     
71: 
72:             
73:         
74:         
75:             gnormal.a = 
76:         0.75*fract((lineardepth + 5.0*hashid)*(-1.0/192.0))
77:     ;
78:         
79:     
80: 
81:             
82: 
83:             
84:         gcolor.a =  (gloss.x * 85.0/255.0 + 0.5/255.0) ; 
85:     
86:         }
87:     
GLSL ERROR (FS:linearizedepth)
0(35) : error C0107: Too many arguments to macro fragdata
0(36) : error C1004: in and out only apply to formal parameters "main"
0(42) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform sampler2DMS tex0;
19:         #define gfetchsample 0
20:         #define gfetch(sampler, coords) texelFetch(sampler, ivec2(coords), gfetchsample)
21:         #define gfetchoffset(sampler, coords, offset) texelFetch(sampler, ivec2(coords) + offset, gfetchsample)
22:         #define gfetchproj(sampler, coords) texelFetch(sampler, ivec2(coords.xy / coords.z), gfetchsample)
23:         #if __VERSION__ >= 130 || defined(GL_EXT_gpu_shader4)
24:             #define gfetchclamp(sampler, coords) texelFetch(sampler, clamp(ivec2(coords), ivec2(0), textureSize(sampler)-1), gfetchsample)
25:         #else
26:             #define gfetchclamp(sampler, coords) texelFetch(sampler, ivec2(clamp(coords, vec2(0.0), vec2(textureSize(sampler)-1))), gfetchsample)
27:         #endif
28:         
29:         uniform vec3 gdepthscale;
30:         uniform vec3 gdepthunpackparams;
31:     
32:     
33:     uniform vec3 gdepthpackparams;
34:     varying vec2 texcoord0;
35:     fragdata(0, fragcolor, vec4)
36:     void main(void)
37:     {
38:         
39:             
40:         float depth = gdepthscale.x / (gfetch(tex0, texcoord0).r*gdepthscale.y + gdepthscale.z);
41:     
42:             fragcolor.r = depth;
43:         
44:     }
GLSL ERROR (FS:explosion)
0(22) : error C0107: Too many arguments to macro fragdata
0(23) : error C1004: in and out only apply to formal parameters "main"
0(32) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: varying vec4 color;
19:         varying vec2 texcoord0, texcoord1, texcoord2;
20:         uniform sampler2D tex0;
21:         uniform vec2 blendparams;
22:         fragdata(0, fragcolor, vec4)
23:         void main(void)
24:         {
25:             vec2 dtc = texcoord0 + texture2D(tex0, texcoord2).xy*0.1; 
26:             vec4 diffuse = texture2D(tex0, dtc);
27:             float blend = max(pow(clamp(1.0 - dot(texcoord1, texcoord1), 0.0, 1.0), blendparams.x), blendparams.y);
28:             diffuse *= blend*4.0; 
29:             diffuse.b += 0.5 - blend*0.5; 
30: 
31:             
32:                 fragcolor = diffuse * color;
33:             
34:         }
35:     
GLSL ERROR (FS:explosionsoft)
0(40) : error C0107: Too many arguments to macro fragdata
0(41) : error C1004: in and out only apply to formal parameters "main"
0(50) : error C1503: undefined variable "fragcolor"
0(55) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform sampler2DMS tex2;
19:         #define gfetchsample 0
20:         #define gfetch(sampler, coords) texelFetch(sampler, ivec2(coords), gfetchsample)
21:         #define gfetchoffset(sampler, coords, offset) texelFetch(sampler, ivec2(coords) + offset, gfetchsample)
22:         #define gfetchproj(sampler, coords) texelFetch(sampler, ivec2(coords.xy / coords.z), gfetchsample)
23:         #if __VERSION__ >= 130 || defined(GL_EXT_gpu_shader4)
24:             #define gfetchclamp(sampler, coords) texelFetch(sampler, clamp(ivec2(coords), ivec2(0), textureSize(sampler)-1), gfetchsample)
25:         #else
26:             #define gfetchclamp(sampler, coords) texelFetch(sampler, ivec2(clamp(coords, vec2(0.0), vec2(textureSize(sampler)-1))), gfetchsample)
27:         #endif
28:         
29:         uniform vec3 gdepthscale;
30:         uniform vec3 gdepthunpackparams;
31:     
32:     
33:             uniform vec3 softparams;
34:             varying float lineardepth;
35:         
36:         varying vec4 color;
37:         varying vec2 texcoord0, texcoord1, texcoord2;
38:         uniform sampler2D tex0;
39:         uniform vec2 blendparams;
40:         fragdata(0, fragcolor, vec4)
41:         void main(void)
42:         {
43:             vec2 dtc = texcoord0 + texture2D(tex0, texcoord2).xy*0.1; 
44:             vec4 diffuse = texture2D(tex0, dtc);
45:             float blend = max(pow(clamp(1.0 - dot(texcoord1, texcoord1), 0.0, 1.0), blendparams.x), blendparams.y);
46:             diffuse *= blend*4.0; 
47:             diffuse.b += 0.5 - blend*0.5; 
48: 
49:             
50:                 fragcolor.rgb = diffuse.rgb * color.rgb;
51: 
52:                 
53:         float depth = gdepthscale.x / (gfetch(tex2, gl_FragCoord.xy).r*gdepthscale.y + gdepthscale.z);
54:     
55:                 fragcolor.a = diffuse.a * max(clamp((depth - lineardepth)*softparams.x - softparams.y, 0.0, 1.0) * color.a, softparams.z);
56:             
57:         }
58:     
GLSL ERROR (FS:particlenotexture)
0(19) : error C0107: Too many arguments to macro fragdata
0(20) : error C1004: in and out only apply to formal parameters "main"
0(22) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: varying vec4 color;
19:     fragdata(0, fragcolor, vec4)
20:     void main(void)
21:     {
22:         fragcolor = color;
23:     }
GLSL ERROR (FS:particletext)
0(22) : error C0107: Too many arguments to macro fragdata
0(23) : error C1004: in and out only apply to formal parameters "main"
0(28) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform vec4 textparams;
19:     uniform sampler2D tex0;
20:     varying vec4 color;
21:     varying vec2 texcoord0;
22:     fragdata(0, fragcolor, vec4)
23:     void main(void)
24:     {
25:         float dist = texture2D(tex0, texcoord0).r;
26:         float border = smoothstep(textparams.x, textparams.y, dist);
27:         float outline = smoothstep(textparams.z, textparams.w, dist);
28:         fragcolor = vec4(color.rgb * outline, color.a * border);
29:     }
GLSL ERROR (FS:particle)
0(21) : error C0107: Too many arguments to macro fragdata
0(22) : error C1004: in and out only apply to formal parameters "main"
0(29) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform sampler2D tex0;
19:         varying vec4 color;
20:         varying vec2 texcoord0;
21:         fragdata(0, fragcolor, vec4)
22:         void main(void)
23:         {
24:             vec4 diffuse = texture2D(tex0, texcoord0);
25:             #pragma CUBE2_swizzle diffuse
26: 
27:             
28: 
29:             fragcolor = diffuse * color;
30:         }
31:     
GLSL ERROR (FS:particlesoft)
0(40) : error C0107: Too many arguments to macro fragdata
0(41) : error C1004: in and out only apply to formal parameters "main"
0(53) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform sampler2DMS tex2;
19:         #define gfetchsample 0
20:         #define gfetch(sampler, coords) texelFetch(sampler, ivec2(coords), gfetchsample)
21:         #define gfetchoffset(sampler, coords, offset) texelFetch(sampler, ivec2(coords) + offset, gfetchsample)
22:         #define gfetchproj(sampler, coords) texelFetch(sampler, ivec2(coords.xy / coords.z), gfetchsample)
23:         #if __VERSION__ >= 130 || defined(GL_EXT_gpu_shader4)
24:             #define gfetchclamp(sampler, coords) texelFetch(sampler, clamp(ivec2(coords), ivec2(0), textureSize(sampler)-1), gfetchsample)
25:         #else
26:             #define gfetchclamp(sampler, coords) texelFetch(sampler, ivec2(clamp(coords, vec2(0.0), vec2(textureSize(sampler)-1))), gfetchsample)
27:         #endif
28:         
29:         uniform vec3 gdepthscale;
30:         uniform vec3 gdepthunpackparams;
31:     
32:     
33:             uniform vec3 softparams;
34:             varying float lineardepth;
35:             varying vec2 surface;
36:         
37:         uniform sampler2D tex0;
38:         varying vec4 color;
39:         varying vec2 texcoord0;
40:         fragdata(0, fragcolor, vec4)
41:         void main(void)
42:         {
43:             vec4 diffuse = texture2D(tex0, texcoord0);
44:             #pragma CUBE2_swizzle diffuse
45: 
46:             
47:                 
48:         float depth = gdepthscale.x / (gfetch(tex2, gl_FragCoord.xy).r*gdepthscale.y + gdepthscale.z);
49:     
50:                 diffuse.a *= clamp((depth - lineardepth)*softparams.x - softparams.y - dot(surface, surface), 0.0, 1.0);
51:             
52: 
53:             fragcolor = diffuse * color;
54:         }
55:     
GLSL ERROR (FS:stain)
0(21) : error C0107: Too many arguments to macro fragdata
0(23) : error C1004: in and out only apply to formal parameters "main"
0(29) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform sampler2D tex0;
19:     varying vec4 color;
20:     varying vec2 texcoord0;
21:     fragdata(0, fragcolor, vec4)
22:     
23:     void main(void)
24:     {
25:         vec4 diffuse = texture2D(tex0, texcoord0);
26:         #pragma CUBE2_swizzle diffuse
27:         
28:             diffuse *= color;
29:             fragcolor = diffuse;
30:             
31:         
32:     }
33:   
GLSL ERROR (FS:overbrightstain)
0(21) : error C0107: Too many arguments to macro fragdata
0(23) : error C1004: in and out only apply to formal parameters "main"
0(29) : error C1503: undefined variable "fragcolor"
0(30) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform sampler2D tex0;
19:     varying vec4 color;
20:     varying vec2 texcoord0;
21:     fragdata(0, fragcolor, vec4)
22:     
23:     void main(void)
24:     {
25:         vec4 diffuse = texture2D(tex0, texcoord0);
26:         #pragma CUBE2_swizzle diffuse
27:         
28:             diffuse.rgb = mix(vec3(0.5), diffuse.rgb, color.rgb);
29:             fragcolor.rgb = diffuse.rgb;
30:             fragcolor.a = 0.5;
31:             
32:         
33:     }
34:   
GLSL ERROR (FS:foggedstain)
0(21) : error C0107: Too many arguments to macro fragdata
0(23) : error C1004: in and out only apply to formal parameters "main"
0(29) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform sampler2D tex0;
19:     varying vec4 color;
20:     varying vec2 texcoord0;
21:     fragdata(0, fragcolor, vec4)
22:     
23:     void main(void)
24:     {
25:         vec4 diffuse = texture2D(tex0, texcoord0);
26:         #pragma CUBE2_swizzle diffuse
27:         
28:             diffuse *= color;
29:             fragcolor = diffuse;
30:             
31:         
32:     }
33:   
GLSL ERROR (FS:refractmask)
0(34) : error C0107: Too many arguments to macro fragdata
0(35) : error C1004: in and out only apply to formal parameters "main"
0(47) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform sampler2DMS tex0;
19:         #define gfetchsample 0
20:         #define gfetch(sampler, coords) texelFetch(sampler, ivec2(coords), gfetchsample)
21:         #define gfetchoffset(sampler, coords, offset) texelFetch(sampler, ivec2(coords) + offset, gfetchsample)
22:         #define gfetchproj(sampler, coords) texelFetch(sampler, ivec2(coords.xy / coords.z), gfetchsample)
23:         #if __VERSION__ >= 130 || defined(GL_EXT_gpu_shader4)
24:             #define gfetchclamp(sampler, coords) texelFetch(sampler, clamp(ivec2(coords), ivec2(0), textureSize(sampler)-1), gfetchsample)
25:         #else
26:             #define gfetchclamp(sampler, coords) texelFetch(sampler, ivec2(clamp(coords, vec2(0.0), vec2(textureSize(sampler)-1))), gfetchsample)
27:         #endif
28:         
29:         uniform vec3 gdepthscale;
30:         uniform vec3 gdepthunpackparams;
31:     
32:     
33:     uniform vec3 gdepthpackparams;
34:     fragdata(0, fragcolor, vec4)
35:     void main(void)
36:     {
37:         
38:             
39:         float depth = gdepthscale.x / (gfetch(tex0, gl_FragCoord.xy).r*gdepthscale.y + gdepthscale.z);
40:     
41:             
42:         vec3 packdepth = depth * gdepthpackparams;
43:         packdepth = vec3(packdepth.x, fract(packdepth.yz));
44:         packdepth.xy -= packdepth.yz * (1.0/255.0);
45:     
46:         
47:         fragcolor = vec4(packdepth, 0.0);
48:     }
GLSL ERROR (FS:hdrreduce)
0(20) : error C0107: Too many arguments to macro fragdata
0(21) : error C1004: in and out only apply to formal parameters "main"
0(23) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform sampler2DRect tex0; 
19:     varying vec2 texcoord0;
20:     fragdata(0, fragcolor, vec4)
21:     void main(void)
22:     {
23:         fragcolor.rgb = texture2DRect(tex0, texcoord0).rgb;
24:     }
GLSL ERROR (FS:hdrreduce2w)
0(20) : error C0107: Too many arguments to macro fragdata
0(21) : error C1004: in and out only apply to formal parameters "main"
0(23) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform sampler2DRect tex0; 
19:     varying vec2 texcoord0;
20:     fragdata(0, fragcolor, vec4)
21:     void main(void)
22:     {
23:         fragcolor.rgb = 0.5*(texture2DRectOffset(tex0, texcoord0, ivec2(-1, 0)).rgb + texture2DRectOffset(tex0, texcoord0, ivec2(1, 0)).rgb);
24:     }
GLSL ERROR (FS:hdrreduce2)
0(20) : error C0107: Too many arguments to macro fragdata
0(21) : error C1004: in and out only apply to formal parameters "main"
0(23) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform sampler2DRect tex0; 
19:     varying vec2 texcoord0;
20:     fragdata(0, fragcolor, vec4)
21:     void main(void)
22:     {
23:         fragcolor.rgb = 0.25*(texture2DRectOffset(tex0, texcoord0, ivec2(-1, -1)).rgb + texture2DRectOffset(tex0, texcoord0, ivec2(1, -1)).rgb +
24:                               texture2DRectOffset(tex0, texcoord0, ivec2(1, 1)).rgb + texture2DRectOffset(tex0, texcoord0, ivec2(-1, 1)).rgb);
25:     }
GLSL ERROR (FS:hdrluminance)
0(21) : error C0107: Too many arguments to macro fragdata
0(22) : error C1004: in and out only apply to formal parameters "main"
0(30) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform sampler2DRect tex0; 
19:     uniform vec2 hdrgamma;
20:     varying vec2 texcoord0;
21:     fragdata(0, fragcolor, vec4)
22:     void main(void)
23:     {
24:         vec3 color = texture2DRect(tex0, texcoord0).rgb*2.0;
25:         
26:         color *= color;
27:     
28:         float lum = dot(color, vec3(0.2126, 0.7152, 0.0722));
29:         float loglum = sqrt(clamp(lum, 0.015625, 4.0)) * (1.0/2.0); 
30:         fragcolor.rgb = vec3(loglum);
31:     }
GLSL ERROR (FS:hdrluminance2w)
0(21) : error C0107: Too many arguments to macro fragdata
0(22) : error C1004: in and out only apply to formal parameters "main"
0(39) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform sampler2DRect tex0; 
19:     uniform vec2 hdrgamma;
20:     varying vec2 texcoord0;
21:     fragdata(0, fragcolor, vec4)
22:     void main(void)
23:     {
24:         
25:             vec3 color0 = texture2DRectOffset(tex0, texcoord0, ivec2(-1, 0)).rgb*2.0;
26:             
27:         color0 *= color0;
28:     
29:             float lum0 = dot(color0, vec3(0.2126, 0.7152, 0.0722));
30:             float loglum0 = sqrt(clamp(lum0, 0.015625, 4.0)) * (1.0/2.0);
31:          
32:             vec3 color1 = texture2DRectOffset(tex0, texcoord0, ivec2(1, 0)).rgb*2.0;
33:             
34:         color1 *= color1;
35:     
36:             float lum1 = dot(color1, vec3(0.2126, 0.7152, 0.0722));
37:             float loglum1 = sqrt(clamp(lum1, 0.015625, 4.0)) * (1.0/2.0);
38:         
39:         fragcolor.rgb = vec3(0.5*(loglum0 + loglum1));
40:     }
GLSL ERROR (FS:hdrluminance2)
0(21) : error C0107: Too many arguments to macro fragdata
0(22) : error C1004: in and out only apply to formal parameters "main"
0(53) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform sampler2DRect tex0; 
19:     uniform vec2 hdrgamma;
20:     varying vec2 texcoord0;
21:     fragdata(0, fragcolor, vec4)
22:     void main(void)
23:     {
24:         
25:             vec3 color0 = texture2DRectOffset(tex0, texcoord0, ivec2(-1, -1)).rgb*2.0;
26:             
27:         color0 *= color0;
28:     
29:             float lum0 = dot(color0, vec3(0.2126, 0.7152, 0.0722));
30:             float loglum0 = sqrt(clamp(lum0, 0.015625, 4.0)) * (1.0/2.0);
31:          
32:             vec3 color1 = texture2DRectOffset(tex0, texcoord0, ivec2(1, -1)).rgb*2.0;
33:             
34:         color1 *= color1;
35:     
36:             float lum1 = dot(color1, vec3(0.2126, 0.7152, 0.0722));
37:             float loglum1 = sqrt(clamp(lum1, 0.015625, 4.0)) * (1.0/2.0);
38:          
39:             vec3 color2 = texture2DRectOffset(tex0, texcoord0, ivec2(1, 1)).rgb*2.0;
40:             
41:         color2 *= color2;
42:     
43:             float lum2 = dot(color2, vec3(0.2126, 0.7152, 0.0722));
44:             float loglum2 = sqrt(clamp(lum2, 0.015625, 4.0)) * (1.0/2.0);
45:          
46:             vec3 color3 = texture2DRectOffset(tex0, texcoord0, ivec2(-1, 1)).rgb*2.0;
47:             
48:         color3 *= color3;
49:     
50:             float lum3 = dot(color3, vec3(0.2126, 0.7152, 0.0722));
51:             float loglum3 = sqrt(clamp(lum3, 0.015625, 4.0)) * (1.0/2.0);
52:         
53:         fragcolor.rgb = vec3(0.25*(loglum0 + loglum1 + loglum2 + loglum3));
54:     }
GLSL ERROR (FS:hdraccum)
0(20) : error C0107: Too many arguments to macro fragdata
0(21) : error C1004: in and out only apply to formal parameters "main"
0(25) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform sampler2DRect tex0;
19:     uniform float accumscale;
20:     fragdata(0, fragcolor, vec4)
21:     void main(void)
22:     {
23:         float lum = texture2DRect(tex0, vec2(0.5, 0.5)).r * 2.0;
24:         lum *= lum;
25:         fragcolor = vec4(vec3(lum*0.25), accumscale);
26:     }
GLSL ERROR (FS:hdrbloom)
0(22) : error C0107: Too many arguments to macro fragdata
0(23) : error C1004: in and out only apply to formal parameters "main"
0(34) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform sampler2DRect tex0; 
19:     uniform vec2 hdrgamma;
20:     varying vec2 texcoord0;
21:     flat varying float lumscale, lumthreshold;
22:     fragdata(0, fragcolor, vec4)
23:     void main(void)
24:     {
25:         vec3 color = texture2DRect(tex0, texcoord0).rgb*2.0;
26:         
27:         color *= color;
28:     
29:         float lum = dot(color, vec3(0.2126, 0.7152, 0.0722));
30:         color *= max(lum*lumscale - lumthreshold, 0.0) / (lum + 1e-4);
31:         
32:         color = sqrt(color);
33:     
34:         fragcolor.rgb = color;
35:     }
GLSL ERROR (FS:hdrnop)
0(20) : error C0107: Too many arguments to macro fragdata
0(21) : error C1004: in and out only apply to formal parameters "main"
0(24) : error C1503: undefined variable "fragcolor"
0(26) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform sampler2DRect tex0;
19:     varying vec2 texcoord0;
20:     fragdata(0, fragcolor, vec4)
21:     void main(void)
22:     {
23:         vec3 color = texture2DRect(tex0, texcoord0).rgb;
24:         fragcolor.rgb = color;
25:         
26:         fragcolor.a = 0.0;
27:     }
28:   
GLSL ERROR (FS:hdrtonemap)
0(25) : error C0107: Too many arguments to macro fragdata
0(26) : error C1004: in and out only apply to formal parameters "main"
0(43) : error C1503: undefined variable "fragcolor"
0(45) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform sampler2DRect tex0, tex1;
19:     
20:         uniform vec4 hdrparams;
21:         uniform vec2 hdrgamma;
22:         varying vec2 texcoord0, texcoord1;
23:         flat varying float lumscale, lumsaturate;
24:     
25:     fragdata(0, fragcolor, vec4)
26:     void main(void)
27:     {
28:         vec3 bloom = texture2DRect(tex1, texcoord1).rgb*hdrparams.w;
29:         vec3 color = texture2DRect(tex0, texcoord0).rgb*2.0;
30:         color += bloom;
31:         
32:         color *= color;
33:     
34:         {
35:         
36:         float lum = dot(color, vec3(0.2126, 0.7152, 0.0722));
37:         color = min(color, lumsaturate);
38:         color *= (1.0 - exp2(-lum*lumscale)) / (dot(color, vec3(0.2126, 0.7152, 0.0722)) + 1e-4);
39:     }
40:         
41:         color = sqrt(color);
42:     
43:         fragcolor.rgb = color;
44:         
45:         fragcolor.a = 0.0;
46:     }
47:   
GLSL ERROR (FS:skybox)
0(21) : error C0107: Too many arguments to macro fragdata
0(22) : error C1004: in and out only apply to formal parameters "main"
0(26) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform sampler2D tex0;
19:     varying vec4 colorscale;
20:     varying vec2 texcoord0;
21:     fragdata(0, fragcolor, vec4)
22:     void main(void)
23:     {
24:         vec4 color = texture2D(tex0, texcoord0);
25:         #pragma CUBE2_swizzle color
26:         fragcolor = colorscale * color;
27:     }
GLSL ERROR (FS:skyboxoverbright)
0(23) : error C0107: Too many arguments to macro fragdata
0(24) : error C1004: in and out only apply to formal parameters "main"
0(31) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform sampler2D tex0;
19:     uniform vec3 overbrightparams;
20:     uniform float ldrscale;
21:     varying vec4 colorscale;
22:     varying vec2 texcoord0;
23:     fragdata(0, fragcolor, vec4)
24:     void main(void)
25:     {
26:         vec4 color = texture2D(tex0, texcoord0);
27:         #pragma CUBE2_swizzle color
28:         float lum = dot(vec3(0.2126, 0.7152, 0.0722), color.rgb);
29:         float overbright = mix(overbrightparams.x, overbrightparams.y, clamp(lum - overbrightparams.z, 0.0, 1.0));
30:         color.rgb *= overbright;
31:         fragcolor = colorscale * color;
32:     }
GLSL ERROR (FS:atmosphere)
0(27) : error C0107: Too many arguments to macro fragdata
0(29) : error C1004: in and out only apply to formal parameters "calcextinction"
0(85) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform vec3 sunlight;
19:     uniform vec3 sundir;
20:     uniform vec3 sundiskparams;
21:     uniform vec3 atmoradius;
22:     uniform float gm;
23:     uniform vec3 betar, betam, betarm;
24:     uniform vec2 hdrgamma;
25:     uniform float atmoalpha;
26:     varying vec3 camvec;
27:     fragdata(0, fragcolor, vec4)
28: 
29:     vec3 calcextinction(float dist)
30:     {
31:         return exp2(-dist * betarm);
32:     }
33: 
34:     vec3 calcscatter(float costheta)
35:     {
36:         float rphase = 1.0 + costheta*costheta;
37:         float mphase = pow(1.0 + gm*(gm - 2.0*costheta), -1.5);
38:         return betar*rphase + betam*mphase;
39:     }
40: 
41:     float baseopticaldepth(vec3 ray)
42:     {
43:         float a = atmoradius.x * max(ray.z, min(sundir.z, 0.0));
44:         return sqrt(a*a + atmoradius.z) - a;
45:     }
46: 
47:     float opticaldepth(vec3 pos, vec3 ray)
48:     {
49:         pos.z = max(pos.z, 0.0) + atmoradius.x;
50:         float a = dot(pos, ray);
51:         return sqrt(a*a + atmoradius.y - dot(pos, pos)) - a;
52:     }
53: 
54:     void main(void)
55:     {
56:         vec3 camdir = normalize(camvec);
57:         float costheta = dot(camdir, sundir);
58: 
59:         
60:         float raydist = baseopticaldepth(camdir);
61: 
62:         
63:         vec3 extinction = calcextinction(raydist);
64: 
65:         
66:         float lightraydist = opticaldepth(camdir * (raydist * max(0.15 + 0.75 * sundir.z, 0.0)), sundir);
67: 
68:         
69:         vec3 incominglight = calcextinction(lightraydist);
70: 
71:         
72:         vec3 scattering = calcscatter(costheta) * (1.0 - extinction);
73: 
74:         
75:         vec3 inscatter = incominglight * scattering;
76: 
77:         
78:         vec3 sundisk = sundiskparams.z * extinction * pow(clamp(costheta*sundiskparams.x + sundiskparams.y, 0.0, 1.0), 8.0);
79: 
80:         inscatter += sundisk; 
81:         
82:         inscatter = sqrt(inscatter);
83:     
84: 
85:         fragcolor = vec4(sunlight * inscatter, atmoalpha);
86:     }
GLSL ERROR (FS:skyfog)
0(20) : error C0107: Too many arguments to macro fragdata
0(21) : error C1004: in and out only apply to formal parameters "main"
0(23) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform sampler2D tex0;
19:     varying vec4 color;
20:     fragdata(0, fragcolor, vec4)
21:     void main(void)
22:     {
23:         fragcolor = color;
24:     }
GLSL ERROR (FS:scalelinear)
0(20) : error C0107: Too many arguments to macro fragdata
0(22) : error C1004: in and out only apply to formal parameters "main"
0(24) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform sampler2DRect tex0;
19:     varying vec2 texcoord0;
20:     fragdata(0, fragcolor, vec4)
21: 
22:     void main(void)
23:     {
24:         fragcolor = texture2DRect(tex0, texcoord0);
25:     }
GLSL ERROR (FS:reorient)
0(20) : error C0107: Too many arguments to macro fragdata
0(22) : error C1004: in and out only apply to formal parameters "main"
0(24) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform sampler2DRect tex0;
19:     varying vec2 texcoord0;
20:     fragdata(0, fragcolor, vec4)
21: 
22:     void main(void)
23:     {
24:         fragcolor = texture2DRect(tex0, texcoord0);
25:     }
GLSL ERROR (FS:blurx1)
0(23) : error C0107: Too many arguments to macro fragdata
0(24) : error C1004: in and out only apply to formal parameters "main"
0(31) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform float weights[8];
19:         uniform float offsets[8];
20:         uniform sampler2D tex0;
21:         varying vec2 texcoord0, texcoordp1, texcoordn1;
22:         
23:         fragdata(0, fragcolor, vec4)
24:         void main(void)
25:         {
26:             #define texval(coords) texture2D(tex0, (coords))
27:             vec4 val = texval(texcoord0) * weights[0];
28:             
29:                     val += weights[1] * (texval(texcoordp1) + texval(texcoordn1));
30:                 
31:             fragcolor = val;
32:         }
33:     
GLSL ERROR (FS:blury1)
0(23) : error C0107: Too many arguments to macro fragdata
0(24) : error C1004: in and out only apply to formal parameters "main"
0(31) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform float weights[8];
19:         uniform float offsets[8];
20:         uniform sampler2D tex0;
21:         varying vec2 texcoord0, texcoordp1, texcoordn1;
22:         
23:         fragdata(0, fragcolor, vec4)
24:         void main(void)
25:         {
26:             #define texval(coords) texture2D(tex0, (coords))
27:             vec4 val = texval(texcoord0) * weights[0];
28:             
29:                     val += weights[1] * (texval(texcoordp1) + texval(texcoordn1));
30:                 
31:             fragcolor = val;
32:         }
33:     
GLSL ERROR (FS:blurx1rect)
0(23) : error C0107: Too many arguments to macro fragdata
0(24) : error C1004: in and out only apply to formal parameters "main"
0(31) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform float weights[8];
19:         uniform float offsets[8];
20:         uniform sampler2DRect tex0;
21:         varying vec2 texcoord0, texcoordp1, texcoordn1;
22:         
23:         fragdata(0, fragcolor, vec4)
24:         void main(void)
25:         {
26:             #define texval(coords) texture2DRect(tex0, (coords))
27:             vec4 val = texval(texcoord0) * weights[0];
28:             
29:                     val += weights[1] * (texval(texcoordp1) + texval(texcoordn1));
30:                 
31:             fragcolor = val;
32:         }
33:     
GLSL ERROR (FS:blury1rect)
0(23) : error C0107: Too many arguments to macro fragdata
0(24) : error C1004: in and out only apply to formal parameters "main"
0(31) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform float weights[8];
19:         uniform float offsets[8];
20:         uniform sampler2DRect tex0;
21:         varying vec2 texcoord0, texcoordp1, texcoordn1;
22:         
23:         fragdata(0, fragcolor, vec4)
24:         void main(void)
25:         {
26:             #define texval(coords) texture2DRect(tex0, (coords))
27:             vec4 val = texval(texcoord0) * weights[0];
28:             
29:                     val += weights[1] * (texval(texcoordp1) + texval(texcoordn1));
30:                 
31:             fragcolor = val;
32:         }
33:     
GLSL ERROR (FS:blurx2)
0(25) : error C0107: Too many arguments to macro fragdata
0(26) : error C1004: in and out only apply to formal parameters "main"
0(35) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform float weights[8];
19:         uniform float offsets[8];
20:         uniform sampler2D tex0;
21:         varying vec2 texcoord0, texcoordp1, texcoordn1;
22:         
23:             varying vec2 texcoordp2, texcoordn2;
24:         
25:         fragdata(0, fragcolor, vec4)
26:         void main(void)
27:         {
28:             #define texval(coords) texture2D(tex0, (coords))
29:             vec4 val = texval(texcoord0) * weights[0];
30:             
31:                     val += weights[1] * (texval(texcoordp1) + texval(texcoordn1));
32:                  
33:                     val += weights[2] * (texval(texcoordp2) + texval(texcoordn2));
34:                 
35:             fragcolor = val;
36:         }
37:     
GLSL ERROR (FS:blury2)
0(25) : error C0107: Too many arguments to macro fragdata
0(26) : error C1004: in and out only apply to formal parameters "main"
0(35) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform float weights[8];
19:         uniform float offsets[8];
20:         uniform sampler2D tex0;
21:         varying vec2 texcoord0, texcoordp1, texcoordn1;
22:         
23:             varying vec2 texcoordp2, texcoordn2;
24:         
25:         fragdata(0, fragcolor, vec4)
26:         void main(void)
27:         {
28:             #define texval(coords) texture2D(tex0, (coords))
29:             vec4 val = texval(texcoord0) * weights[0];
30:             
31:                     val += weights[1] * (texval(texcoordp1) + texval(texcoordn1));
32:                  
33:                     val += weights[2] * (texval(texcoordp2) + texval(texcoordn2));
34:                 
35:             fragcolor = val;
36:         }
37:     
GLSL ERROR (FS:blurx2rect)
0(25) : error C0107: Too many arguments to macro fragdata
0(26) : error C1004: in and out only apply to formal parameters "main"
0(35) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform float weights[8];
19:         uniform float offsets[8];
20:         uniform sampler2DRect tex0;
21:         varying vec2 texcoord0, texcoordp1, texcoordn1;
22:         
23:             varying vec2 texcoordp2, texcoordn2;
24:         
25:         fragdata(0, fragcolor, vec4)
26:         void main(void)
27:         {
28:             #define texval(coords) texture2DRect(tex0, (coords))
29:             vec4 val = texval(texcoord0) * weights[0];
30:             
31:                     val += weights[1] * (texval(texcoordp1) + texval(texcoordn1));
32:                  
33:                     val += weights[2] * (texval(texcoordp2) + texval(texcoordn2));
34:                 
35:             fragcolor = val;
36:         }
37:     
GLSL ERROR (FS:blury2rect)
0(25) : error C0107: Too many arguments to macro fragdata
0(26) : error C1004: in and out only apply to formal parameters "main"
0(35) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform float weights[8];
19:         uniform float offsets[8];
20:         uniform sampler2DRect tex0;
21:         varying vec2 texcoord0, texcoordp1, texcoordn1;
22:         
23:             varying vec2 texcoordp2, texcoordn2;
24:         
25:         fragdata(0, fragcolor, vec4)
26:         void main(void)
27:         {
28:             #define texval(coords) texture2DRect(tex0, (coords))
29:             vec4 val = texval(texcoord0) * weights[0];
30:             
31:                     val += weights[1] * (texval(texcoordp1) + texval(texcoordn1));
32:                  
33:                     val += weights[2] * (texval(texcoordp2) + texval(texcoordn2));
34:                 
35:             fragcolor = val;
36:         }
37:     
GLSL ERROR (FS:blurx3)
0(27) : error C0107: Too many arguments to macro fragdata
0(28) : error C1004: in and out only apply to formal parameters "main"
0(39) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform float weights[8];
19:         uniform float offsets[8];
20:         uniform sampler2D tex0;
21:         varying vec2 texcoord0, texcoordp1, texcoordn1;
22:         
23:             varying vec2 texcoordp2, texcoordn2;
24:          
25:             varying vec2 texcoordp3, texcoordn3;
26:         
27:         fragdata(0, fragcolor, vec4)
28:         void main(void)
29:         {
30:             #define texval(coords) texture2D(tex0, (coords))
31:             vec4 val = texval(texcoord0) * weights[0];
32:             
33:                     val += weights[1] * (texval(texcoordp1) + texval(texcoordn1));
34:                  
35:                     val += weights[2] * (texval(texcoordp2) + texval(texcoordn2));
36:                  
37:                     val += weights[3] * (texval(texcoordp3) + texval(texcoordn3));
38:                 
39:             fragcolor = val;
40:         }
41:     
GLSL ERROR (FS:blury3)
0(27) : error C0107: Too many arguments to macro fragdata
0(28) : error C1004: in and out only apply to formal parameters "main"
0(39) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform float weights[8];
19:         uniform float offsets[8];
20:         uniform sampler2D tex0;
21:         varying vec2 texcoord0, texcoordp1, texcoordn1;
22:         
23:             varying vec2 texcoordp2, texcoordn2;
24:          
25:             varying vec2 texcoordp3, texcoordn3;
26:         
27:         fragdata(0, fragcolor, vec4)
28:         void main(void)
29:         {
30:             #define texval(coords) texture2D(tex0, (coords))
31:             vec4 val = texval(texcoord0) * weights[0];
32:             
33:                     val += weights[1] * (texval(texcoordp1) + texval(texcoordn1));
34:                  
35:                     val += weights[2] * (texval(texcoordp2) + texval(texcoordn2));
36:                  
37:                     val += weights[3] * (texval(texcoordp3) + texval(texcoordn3));
38:                 
39:             fragcolor = val;
40:         }
41:     
GLSL ERROR (FS:blurx3rect)
0(27) : error C0107: Too many arguments to macro fragdata
0(28) : error C1004: in and out only apply to formal parameters "main"
0(39) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform float weights[8];
19:         uniform float offsets[8];
20:         uniform sampler2DRect tex0;
21:         varying vec2 texcoord0, texcoordp1, texcoordn1;
22:         
23:             varying vec2 texcoordp2, texcoordn2;
24:          
25:             varying vec2 texcoordp3, texcoordn3;
26:         
27:         fragdata(0, fragcolor, vec4)
28:         void main(void)
29:         {
30:             #define texval(coords) texture2DRect(tex0, (coords))
31:             vec4 val = texval(texcoord0) * weights[0];
32:             
33:                     val += weights[1] * (texval(texcoordp1) + texval(texcoordn1));
34:                  
35:                     val += weights[2] * (texval(texcoordp2) + texval(texcoordn2));
36:                  
37:                     val += weights[3] * (texval(texcoordp3) + texval(texcoordn3));
38:                 
39:             fragcolor = val;
40:         }
41:     
GLSL ERROR (FS:blury3rect)
0(27) : error C0107: Too many arguments to macro fragdata
0(28) : error C1004: in and out only apply to formal parameters "main"
0(39) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform float weights[8];
19:         uniform float offsets[8];
20:         uniform sampler2DRect tex0;
21:         varying vec2 texcoord0, texcoordp1, texcoordn1;
22:         
23:             varying vec2 texcoordp2, texcoordn2;
24:          
25:             varying vec2 texcoordp3, texcoordn3;
26:         
27:         fragdata(0, fragcolor, vec4)
28:         void main(void)
29:         {
30:             #define texval(coords) texture2DRect(tex0, (coords))
31:             vec4 val = texval(texcoord0) * weights[0];
32:             
33:                     val += weights[1] * (texval(texcoordp1) + texval(texcoordn1));
34:                  
35:                     val += weights[2] * (texval(texcoordp2) + texval(texcoordn2));
36:                  
37:                     val += weights[3] * (texval(texcoordp3) + texval(texcoordn3));
38:                 
39:             fragcolor = val;
40:         }
41:     
GLSL ERROR (FS:blurx4)
0(27) : error C0107: Too many arguments to macro fragdata
0(28) : error C1004: in and out only apply to formal parameters "main"
0(44) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform float weights[8];
19:         uniform float offsets[8];
20:         uniform sampler2D tex0;
21:         varying vec2 texcoord0, texcoordp1, texcoordn1;
22:         
23:             varying vec2 texcoordp2, texcoordn2;
24:          
25:             varying vec2 texcoordp3, texcoordn3;
26:         
27:         fragdata(0, fragcolor, vec4)
28:         void main(void)
29:         {
30:             #define texval(coords) texture2D(tex0, (coords))
31:             vec4 val = texval(texcoord0) * weights[0];
32:             
33:                     val += weights[1] * (texval(texcoordp1) + texval(texcoordn1));
34:                  
35:                     val += weights[2] * (texval(texcoordp2) + texval(texcoordn2));
36:                  
37:                     val += weights[3] * (texval(texcoordp3) + texval(texcoordn3));
38:                  
39:                     val += weights[4] * 
40:                     
41:                         (texval(vec2(texcoord0.x + offsets[4], texcoord0.y)) + texval(vec2(texcoord0.x - offsets[4], texcoord0.y)));
42:                     
43:                 
44:             fragcolor = val;
45:         }
46:     
GLSL ERROR (FS:blury4)
0(27) : error C0107: Too many arguments to macro fragdata
0(28) : error C1004: in and out only apply to formal parameters "main"
0(44) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform float weights[8];
19:         uniform float offsets[8];
20:         uniform sampler2D tex0;
21:         varying vec2 texcoord0, texcoordp1, texcoordn1;
22:         
23:             varying vec2 texcoordp2, texcoordn2;
24:          
25:             varying vec2 texcoordp3, texcoordn3;
26:         
27:         fragdata(0, fragcolor, vec4)
28:         void main(void)
29:         {
30:             #define texval(coords) texture2D(tex0, (coords))
31:             vec4 val = texval(texcoord0) * weights[0];
32:             
33:                     val += weights[1] * (texval(texcoordp1) + texval(texcoordn1));
34:                  
35:                     val += weights[2] * (texval(texcoordp2) + texval(texcoordn2));
36:                  
37:                     val += weights[3] * (texval(texcoordp3) + texval(texcoordn3));
38:                  
39:                     val += weights[4] * 
40:                     
41:                         (texval(vec2(texcoord0.x, texcoord0.y + offsets[4])) + texval(vec2(texcoord0.x, texcoord0.y - offsets[4])));
42:                     
43:                 
44:             fragcolor = val;
45:         }
46:     
GLSL ERROR (FS:blurx4rect)
0(27) : error C0107: Too many arguments to macro fragdata
0(28) : error C1004: in and out only apply to formal parameters "main"
0(44) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform float weights[8];
19:         uniform float offsets[8];
20:         uniform sampler2DRect tex0;
21:         varying vec2 texcoord0, texcoordp1, texcoordn1;
22:         
23:             varying vec2 texcoordp2, texcoordn2;
24:          
25:             varying vec2 texcoordp3, texcoordn3;
26:         
27:         fragdata(0, fragcolor, vec4)
28:         void main(void)
29:         {
30:             #define texval(coords) texture2DRect(tex0, (coords))
31:             vec4 val = texval(texcoord0) * weights[0];
32:             
33:                     val += weights[1] * (texval(texcoordp1) + texval(texcoordn1));
34:                  
35:                     val += weights[2] * (texval(texcoordp2) + texval(texcoordn2));
36:                  
37:                     val += weights[3] * (texval(texcoordp3) + texval(texcoordn3));
38:                  
39:                     val += weights[4] * 
40:                     
41:                         (texval(vec2(texcoord0.x + offsets[4], texcoord0.y)) + texval(vec2(texcoord0.x - offsets[4], texcoord0.y)));
42:                     
43:                 
44:             fragcolor = val;
45:         }
46:     
GLSL ERROR (FS:blury4rect)
0(27) : error C0107: Too many arguments to macro fragdata
0(28) : error C1004: in and out only apply to formal parameters "main"
0(44) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform float weights[8];
19:         uniform float offsets[8];
20:         uniform sampler2DRect tex0;
21:         varying vec2 texcoord0, texcoordp1, texcoordn1;
22:         
23:             varying vec2 texcoordp2, texcoordn2;
24:          
25:             varying vec2 texcoordp3, texcoordn3;
26:         
27:         fragdata(0, fragcolor, vec4)
28:         void main(void)
29:         {
30:             #define texval(coords) texture2DRect(tex0, (coords))
31:             vec4 val = texval(texcoord0) * weights[0];
32:             
33:                     val += weights[1] * (texval(texcoordp1) + texval(texcoordn1));
34:                  
35:                     val += weights[2] * (texval(texcoordp2) + texval(texcoordn2));
36:                  
37:                     val += weights[3] * (texval(texcoordp3) + texval(texcoordn3));
38:                  
39:                     val += weights[4] * 
40:                     
41:                         (texval(vec2(texcoord0.x, texcoord0.y + offsets[4])) + texval(vec2(texcoord0.x, texcoord0.y - offsets[4])));
42:                     
43:                 
44:             fragcolor = val;
45:         }
46:     
GLSL ERROR (FS:blurx5)
0(27) : error C0107: Too many arguments to macro fragdata
0(28) : error C1004: in and out only apply to formal parameters "main"
0(49) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform float weights[8];
19:         uniform float offsets[8];
20:         uniform sampler2D tex0;
21:         varying vec2 texcoord0, texcoordp1, texcoordn1;
22:         
23:             varying vec2 texcoordp2, texcoordn2;
24:          
25:             varying vec2 texcoordp3, texcoordn3;
26:         
27:         fragdata(0, fragcolor, vec4)
28:         void main(void)
29:         {
30:             #define texval(coords) texture2D(tex0, (coords))
31:             vec4 val = texval(texcoord0) * weights[0];
32:             
33:                     val += weights[1] * (texval(texcoordp1) + texval(texcoordn1));
34:                  
35:                     val += weights[2] * (texval(texcoordp2) + texval(texcoordn2));
36:                  
37:                     val += weights[3] * (texval(texcoordp3) + texval(texcoordn3));
38:                  
39:                     val += weights[4] * 
40:                     
41:                         (texval(vec2(texcoord0.x + offsets[4], texcoord0.y)) + texval(vec2(texcoord0.x - offsets[4], texcoord0.y)));
42:                     
43:                  
44:                     val += weights[5] * 
45:                     
46:                         (texval(vec2(texcoord0.x + offsets[5], texcoord0.y)) + texval(vec2(texcoord0.x - offsets[5], texcoord0.y)));
47:                     
48:                 
49:             fragcolor = val;
50:         }
51:     
GLSL ERROR (FS:blury5)
0(27) : error C0107: Too many arguments to macro fragdata
0(28) : error C1004: in and out only apply to formal parameters "main"
0(49) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform float weights[8];
19:         uniform float offsets[8];
20:         uniform sampler2D tex0;
21:         varying vec2 texcoord0, texcoordp1, texcoordn1;
22:         
23:             varying vec2 texcoordp2, texcoordn2;
24:          
25:             varying vec2 texcoordp3, texcoordn3;
26:         
27:         fragdata(0, fragcolor, vec4)
28:         void main(void)
29:         {
30:             #define texval(coords) texture2D(tex0, (coords))
31:             vec4 val = texval(texcoord0) * weights[0];
32:             
33:                     val += weights[1] * (texval(texcoordp1) + texval(texcoordn1));
34:                  
35:                     val += weights[2] * (texval(texcoordp2) + texval(texcoordn2));
36:                  
37:                     val += weights[3] * (texval(texcoordp3) + texval(texcoordn3));
38:                  
39:                     val += weights[4] * 
40:                     
41:                         (texval(vec2(texcoord0.x, texcoord0.y + offsets[4])) + texval(vec2(texcoord0.x, texcoord0.y - offsets[4])));
42:                     
43:                  
44:                     val += weights[5] * 
45:                     
46:                         (texval(vec2(texcoord0.x, texcoord0.y + offsets[5])) + texval(vec2(texcoord0.x, texcoord0.y - offsets[5])));
47:                     
48:                 
49:             fragcolor = val;
50:         }
51:     
GLSL ERROR (FS:blurx5rect)
0(27) : error C0107: Too many arguments to macro fragdata
0(28) : error C1004: in and out only apply to formal parameters "main"
0(49) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform float weights[8];
19:         uniform float offsets[8];
20:         uniform sampler2DRect tex0;
21:         varying vec2 texcoord0, texcoordp1, texcoordn1;
22:         
23:             varying vec2 texcoordp2, texcoordn2;
24:          
25:             varying vec2 texcoordp3, texcoordn3;
26:         
27:         fragdata(0, fragcolor, vec4)
28:         void main(void)
29:         {
30:             #define texval(coords) texture2DRect(tex0, (coords))
31:             vec4 val = texval(texcoord0) * weights[0];
32:             
33:                     val += weights[1] * (texval(texcoordp1) + texval(texcoordn1));
34:                  
35:                     val += weights[2] * (texval(texcoordp2) + texval(texcoordn2));
36:                  
37:                     val += weights[3] * (texval(texcoordp3) + texval(texcoordn3));
38:                  
39:                     val += weights[4] * 
40:                     
41:                         (texval(vec2(texcoord0.x + offsets[4], texcoord0.y)) + texval(vec2(texcoord0.x - offsets[4], texcoord0.y)));
42:                     
43:                  
44:                     val += weights[5] * 
45:                     
46:                         (texval(vec2(texcoord0.x + offsets[5], texcoord0.y)) + texval(vec2(texcoord0.x - offsets[5], texcoord0.y)));
47:                     
48:                 
49:             fragcolor = val;
50:         }
51:     
GLSL ERROR (FS:blury5rect)
0(27) : error C0107: Too many arguments to macro fragdata
0(28) : error C1004: in and out only apply to formal parameters "main"
0(49) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform float weights[8];
19:         uniform float offsets[8];
20:         uniform sampler2DRect tex0;
21:         varying vec2 texcoord0, texcoordp1, texcoordn1;
22:         
23:             varying vec2 texcoordp2, texcoordn2;
24:          
25:             varying vec2 texcoordp3, texcoordn3;
26:         
27:         fragdata(0, fragcolor, vec4)
28:         void main(void)
29:         {
30:             #define texval(coords) texture2DRect(tex0, (coords))
31:             vec4 val = texval(texcoord0) * weights[0];
32:             
33:                     val += weights[1] * (texval(texcoordp1) + texval(texcoordn1));
34:                  
35:                     val += weights[2] * (texval(texcoordp2) + texval(texcoordn2));
36:                  
37:                     val += weights[3] * (texval(texcoordp3) + texval(texcoordn3));
38:                  
39:                     val += weights[4] * 
40:                     
41:                         (texval(vec2(texcoord0.x, texcoord0.y + offsets[4])) + texval(vec2(texcoord0.x, texcoord0.y - offsets[4])));
42:                     
43:                  
44:                     val += weights[5] * 
45:                     
46:                         (texval(vec2(texcoord0.x, texcoord0.y + offsets[5])) + texval(vec2(texcoord0.x, texcoord0.y - offsets[5])));
47:                     
48:                 
49:             fragcolor = val;
50:         }
51:     
GLSL ERROR (FS:blurx6)
0(27) : error C0107: Too many arguments to macro fragdata
0(28) : error C1004: in and out only apply to formal parameters "main"
0(54) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform float weights[8];
19:         uniform float offsets[8];
20:         uniform sampler2D tex0;
21:         varying vec2 texcoord0, texcoordp1, texcoordn1;
22:         
23:             varying vec2 texcoordp2, texcoordn2;
24:          
25:             varying vec2 texcoordp3, texcoordn3;
26:         
27:         fragdata(0, fragcolor, vec4)
28:         void main(void)
29:         {
30:             #define texval(coords) texture2D(tex0, (coords))
31:             vec4 val = texval(texcoord0) * weights[0];
32:             
33:                     val += weights[1] * (texval(texcoordp1) + texval(texcoordn1));
34:                  
35:                     val += weights[2] * (texval(texcoordp2) + texval(texcoordn2));
36:                  
37:                     val += weights[3] * (texval(texcoordp3) + texval(texcoordn3));
38:                  
39:                     val += weights[4] * 
40:                     
41:                         (texval(vec2(texcoord0.x + offsets[4], texcoord0.y)) + texval(vec2(texcoord0.x - offsets[4], texcoord0.y)));
42:                     
43:                  
44:                     val += weights[5] * 
45:                     
46:                         (texval(vec2(texcoord0.x + offsets[5], texcoord0.y)) + texval(vec2(texcoord0.x - offsets[5], texcoord0.y)));
47:                     
48:                  
49:                     val += weights[6] * 
50:                     
51:                         (texval(vec2(texcoord0.x + offsets[6], texcoord0.y)) + texval(vec2(texcoord0.x - offsets[6], texcoord0.y)));
52:                     
53:                 
54:             fragcolor = val;
55:         }
56:     
GLSL ERROR (FS:blury6)
0(27) : error C0107: Too many arguments to macro fragdata
0(28) : error C1004: in and out only apply to formal parameters "main"
0(54) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform float weights[8];
19:         uniform float offsets[8];
20:         uniform sampler2D tex0;
21:         varying vec2 texcoord0, texcoordp1, texcoordn1;
22:         
23:             varying vec2 texcoordp2, texcoordn2;
24:          
25:             varying vec2 texcoordp3, texcoordn3;
26:         
27:         fragdata(0, fragcolor, vec4)
28:         void main(void)
29:         {
30:             #define texval(coords) texture2D(tex0, (coords))
31:             vec4 val = texval(texcoord0) * weights[0];
32:             
33:                     val += weights[1] * (texval(texcoordp1) + texval(texcoordn1));
34:                  
35:                     val += weights[2] * (texval(texcoordp2) + texval(texcoordn2));
36:                  
37:                     val += weights[3] * (texval(texcoordp3) + texval(texcoordn3));
38:                  
39:                     val += weights[4] * 
40:                     
41:                         (texval(vec2(texcoord0.x, texcoord0.y + offsets[4])) + texval(vec2(texcoord0.x, texcoord0.y - offsets[4])));
42:                     
43:                  
44:                     val += weights[5] * 
45:                     
46:                         (texval(vec2(texcoord0.x, texcoord0.y + offsets[5])) + texval(vec2(texcoord0.x, texcoord0.y - offsets[5])));
47:                     
48:                  
49:                     val += weights[6] * 
50:                     
51:                         (texval(vec2(texcoord0.x, texcoord0.y + offsets[6])) + texval(vec2(texcoord0.x, texcoord0.y - offsets[6])));
52:                     
53:                 
54:             fragcolor = val;
55:         }
56:     
GLSL ERROR (FS:blurx6rect)
0(27) : error C0107: Too many arguments to macro fragdata
0(28) : error C1004: in and out only apply to formal parameters "main"
0(54) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform float weights[8];
19:         uniform float offsets[8];
20:         uniform sampler2DRect tex0;
21:         varying vec2 texcoord0, texcoordp1, texcoordn1;
22:         
23:             varying vec2 texcoordp2, texcoordn2;
24:          
25:             varying vec2 texcoordp3, texcoordn3;
26:         
27:         fragdata(0, fragcolor, vec4)
28:         void main(void)
29:         {
30:             #define texval(coords) texture2DRect(tex0, (coords))
31:             vec4 val = texval(texcoord0) * weights[0];
32:             
33:                     val += weights[1] * (texval(texcoordp1) + texval(texcoordn1));
34:                  
35:                     val += weights[2] * (texval(texcoordp2) + texval(texcoordn2));
36:                  
37:                     val += weights[3] * (texval(texcoordp3) + texval(texcoordn3));
38:                  
39:                     val += weights[4] * 
40:                     
41:                         (texval(vec2(texcoord0.x + offsets[4], texcoord0.y)) + texval(vec2(texcoord0.x - offsets[4], texcoord0.y)));
42:                     
43:                  
44:                     val += weights[5] * 
45:                     
46:                         (texval(vec2(texcoord0.x + offsets[5], texcoord0.y)) + texval(vec2(texcoord0.x - offsets[5], texcoord0.y)));
47:                     
48:                  
49:                     val += weights[6] * 
50:                     
51:                         (texval(vec2(texcoord0.x + offsets[6], texcoord0.y)) + texval(vec2(texcoord0.x - offsets[6], texcoord0.y)));
52:                     
53:                 
54:             fragcolor = val;
55:         }
56:     
GLSL ERROR (FS:blury6rect)
0(27) : error C0107: Too many arguments to macro fragdata
0(28) : error C1004: in and out only apply to formal parameters "main"
0(54) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform float weights[8];
19:         uniform float offsets[8];
20:         uniform sampler2DRect tex0;
21:         varying vec2 texcoord0, texcoordp1, texcoordn1;
22:         
23:             varying vec2 texcoordp2, texcoordn2;
24:          
25:             varying vec2 texcoordp3, texcoordn3;
26:         
27:         fragdata(0, fragcolor, vec4)
28:         void main(void)
29:         {
30:             #define texval(coords) texture2DRect(tex0, (coords))
31:             vec4 val = texval(texcoord0) * weights[0];
32:             
33:                     val += weights[1] * (texval(texcoordp1) + texval(texcoordn1));
34:                  
35:                     val += weights[2] * (texval(texcoordp2) + texval(texcoordn2));
36:                  
37:                     val += weights[3] * (texval(texcoordp3) + texval(texcoordn3));
38:                  
39:                     val += weights[4] * 
40:                     
41:                         (texval(vec2(texcoord0.x, texcoord0.y + offsets[4])) + texval(vec2(texcoord0.x, texcoord0.y - offsets[4])));
42:                     
43:                  
44:                     val += weights[5] * 
45:                     
46:                         (texval(vec2(texcoord0.x, texcoord0.y + offsets[5])) + texval(vec2(texcoord0.x, texcoord0.y - offsets[5])));
47:                     
48:                  
49:                     val += weights[6] * 
50:                     
51:                         (texval(vec2(texcoord0.x, texcoord0.y + offsets[6])) + texval(vec2(texcoord0.x, texcoord0.y - offsets[6])));
52:                     
53:                 
54:             fragcolor = val;
55:         }
56:     
GLSL ERROR (FS:blurx7)
0(27) : error C0107: Too many arguments to macro fragdata
0(28) : error C1004: in and out only apply to formal parameters "main"
0(59) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform float weights[8];
19:         uniform float offsets[8];
20:         uniform sampler2D tex0;
21:         varying vec2 texcoord0, texcoordp1, texcoordn1;
22:         
23:             varying vec2 texcoordp2, texcoordn2;
24:          
25:             varying vec2 texcoordp3, texcoordn3;
26:         
27:         fragdata(0, fragcolor, vec4)
28:         void main(void)
29:         {
30:             #define texval(coords) texture2D(tex0, (coords))
31:             vec4 val = texval(texcoord0) * weights[0];
32:             
33:                     val += weights[1] * (texval(texcoordp1) + texval(texcoordn1));
34:                  
35:                     val += weights[2] * (texval(texcoordp2) + texval(texcoordn2));
36:                  
37:                     val += weights[3] * (texval(texcoordp3) + texval(texcoordn3));
38:                  
39:                     val += weights[4] * 
40:                     
41:                         (texval(vec2(texcoord0.x + offsets[4], texcoord0.y)) + texval(vec2(texcoord0.x - offsets[4], texcoord0.y)));
42:                     
43:                  
44:                     val += weights[5] * 
45:                     
46:                         (texval(vec2(texcoord0.x + offsets[5], texcoord0.y)) + texval(vec2(texcoord0.x - offsets[5], texcoord0.y)));
47:                     
48:                  
49:                     val += weights[6] * 
50:                     
51:                         (texval(vec2(texcoord0.x + offsets[6], texcoord0.y)) + texval(vec2(texcoord0.x - offsets[6], texcoord0.y)));
52:                     
53:                  
54:                     val += weights[7] * 
55:                     
56:                         (texval(vec2(texcoord0.x + offsets[7], texcoord0.y)) + texval(vec2(texcoord0.x - offsets[7], texcoord0.y)));
57:                     
58:                 
59:             fragcolor = val;
60:         }
61:     
GLSL ERROR (FS:blury7)
0(27) : error C0107: Too many arguments to macro fragdata
0(28) : error C1004: in and out only apply to formal parameters "main"
0(59) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform float weights[8];
19:         uniform float offsets[8];
20:         uniform sampler2D tex0;
21:         varying vec2 texcoord0, texcoordp1, texcoordn1;
22:         
23:             varying vec2 texcoordp2, texcoordn2;
24:          
25:             varying vec2 texcoordp3, texcoordn3;
26:         
27:         fragdata(0, fragcolor, vec4)
28:         void main(void)
29:         {
30:             #define texval(coords) texture2D(tex0, (coords))
31:             vec4 val = texval(texcoord0) * weights[0];
32:             
33:                     val += weights[1] * (texval(texcoordp1) + texval(texcoordn1));
34:                  
35:                     val += weights[2] * (texval(texcoordp2) + texval(texcoordn2));
36:                  
37:                     val += weights[3] * (texval(texcoordp3) + texval(texcoordn3));
38:                  
39:                     val += weights[4] * 
40:                     
41:                         (texval(vec2(texcoord0.x, texcoord0.y + offsets[4])) + texval(vec2(texcoord0.x, texcoord0.y - offsets[4])));
42:                     
43:                  
44:                     val += weights[5] * 
45:                     
46:                         (texval(vec2(texcoord0.x, texcoord0.y + offsets[5])) + texval(vec2(texcoord0.x, texcoord0.y - offsets[5])));
47:                     
48:                  
49:                     val += weights[6] * 
50:                     
51:                         (texval(vec2(texcoord0.x, texcoord0.y + offsets[6])) + texval(vec2(texcoord0.x, texcoord0.y - offsets[6])));
52:                     
53:                  
54:                     val += weights[7] * 
55:                     
56:                         (texval(vec2(texcoord0.x, texcoord0.y + offsets[7])) + texval(vec2(texcoord0.x, texcoord0.y - offsets[7])));
57:                     
58:                 
59:             fragcolor = val;
60:         }
61:     
GLSL ERROR (FS:blurx7rect)
0(27) : error C0107: Too many arguments to macro fragdata
0(28) : error C1004: in and out only apply to formal parameters "main"
0(59) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform float weights[8];
19:         uniform float offsets[8];
20:         uniform sampler2DRect tex0;
21:         varying vec2 texcoord0, texcoordp1, texcoordn1;
22:         
23:             varying vec2 texcoordp2, texcoordn2;
24:          
25:             varying vec2 texcoordp3, texcoordn3;
26:         
27:         fragdata(0, fragcolor, vec4)
28:         void main(void)
29:         {
30:             #define texval(coords) texture2DRect(tex0, (coords))
31:             vec4 val = texval(texcoord0) * weights[0];
32:             
33:                     val += weights[1] * (texval(texcoordp1) + texval(texcoordn1));
34:                  
35:                     val += weights[2] * (texval(texcoordp2) + texval(texcoordn2));
36:                  
37:                     val += weights[3] * (texval(texcoordp3) + texval(texcoordn3));
38:                  
39:                     val += weights[4] * 
40:                     
41:                         (texval(vec2(texcoord0.x + offsets[4], texcoord0.y)) + texval(vec2(texcoord0.x - offsets[4], texcoord0.y)));
42:                     
43:                  
44:                     val += weights[5] * 
45:                     
46:                         (texval(vec2(texcoord0.x + offsets[5], texcoord0.y)) + texval(vec2(texcoord0.x - offsets[5], texcoord0.y)));
47:                     
48:                  
49:                     val += weights[6] * 
50:                     
51:                         (texval(vec2(texcoord0.x + offsets[6], texcoord0.y)) + texval(vec2(texcoord0.x - offsets[6], texcoord0.y)));
52:                     
53:                  
54:                     val += weights[7] * 
55:                     
56:                         (texval(vec2(texcoord0.x + offsets[7], texcoord0.y)) + texval(vec2(texcoord0.x - offsets[7], texcoord0.y)));
57:                     
58:                 
59:             fragcolor = val;
60:         }
61:     
GLSL ERROR (FS:blury7rect)
0(27) : error C0107: Too many arguments to macro fragdata
0(28) : error C1004: in and out only apply to formal parameters "main"
0(59) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform float weights[8];
19:         uniform float offsets[8];
20:         uniform sampler2DRect tex0;
21:         varying vec2 texcoord0, texcoordp1, texcoordn1;
22:         
23:             varying vec2 texcoordp2, texcoordn2;
24:          
25:             varying vec2 texcoordp3, texcoordn3;
26:         
27:         fragdata(0, fragcolor, vec4)
28:         void main(void)
29:         {
30:             #define texval(coords) texture2DRect(tex0, (coords))
31:             vec4 val = texval(texcoord0) * weights[0];
32:             
33:                     val += weights[1] * (texval(texcoordp1) + texval(texcoordn1));
34:                  
35:                     val += weights[2] * (texval(texcoordp2) + texval(texcoordn2));
36:                  
37:                     val += weights[3] * (texval(texcoordp3) + texval(texcoordn3));
38:                  
39:                     val += weights[4] * 
40:                     
41:                         (texval(vec2(texcoord0.x, texcoord0.y + offsets[4])) + texval(vec2(texcoord0.x, texcoord0.y - offsets[4])));
42:                     
43:                  
44:                     val += weights[5] * 
45:                     
46:                         (texval(vec2(texcoord0.x, texcoord0.y + offsets[5])) + texval(vec2(texcoord0.x, texcoord0.y - offsets[5])));
47:                     
48:                  
49:                     val += weights[6] * 
50:                     
51:                         (texval(vec2(texcoord0.x, texcoord0.y + offsets[6])) + texval(vec2(texcoord0.x, texcoord0.y - offsets[6])));
52:                     
53:                  
54:                     val += weights[7] * 
55:                     
56:                         (texval(vec2(texcoord0.x, texcoord0.y + offsets[7])) + texval(vec2(texcoord0.x, texcoord0.y - offsets[7])));
57:                     
58:                 
59:             fragcolor = val;
60:         }
61:     
GLSL ERROR (FS:blendbrush)
0(21) : error C0107: Too many arguments to macro fragdata
0(22) : error C1004: in and out only apply to formal parameters "main"
0(24) : error C1503: undefined variable "fragcolor"

1: #version 400
2: #define varying in
3: #define fragdata(loc) layout(location = loc) out
4: #define fragblend(loc) layout(location = loc, index = 1) out
5: #define texture1D(sampler, coords) texture(sampler, coords)
6: #define texture2D(sampler, coords) texture(sampler, coords)
7: #define texture2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
8: #define texture2DProj(sampler, coords) textureProj(sampler, coords)
9: #define shadow2D(sampler, coords) texture(sampler, coords)
10: #define shadow2DOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
11: #define texture3D(sampler, coords) texture(sampler, coords)
12: #define textureCube(sampler, coords) texture(sampler, coords)
13: #define texture2DRect(sampler, coords) texture(sampler, coords)
14: #define texture2DRectProj(sampler, coords) textureProj(sampler, coords)
15: #define shadow2DRect(sampler, coords) texture(sampler, coords)
16: #define texture2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
17: #define shadow2DRectOffset(sampler, coords, offset) textureOffset(sampler, coords, offset)
18: uniform sampler2D tex0;
19:     varying vec4 color;
20:     varying vec2 texcoord0;
21:     fragdata(0, fragcolor, vec4)
22:     void main(void)
23:     {
24:         fragcolor = texture2D(tex0, texcoord0).r * color;
25:     }
cannot find shader definitions
